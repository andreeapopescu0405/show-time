@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@using Blazorise.Icons.FontAwesome
<style>
    
    .top-row.navbar {
        background-color: #4a1e1e; 
        box-shadow: 0 2px 6px rgba(0,0,0,0.4);
        border-bottom: 3px solid #b33939;
        padding: 1rem 2rem;
        position: sticky;
        top: 0;
        z-index: 1000;
    }

   
    .navbar-brand {
        font-size: 1.8rem;
        font-weight: 800;
        color: #f07167; 
        font-family: 'Poppins', sans-serif;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        text-shadow: 1px 1px 4px rgba(0,0,0,0.5);
    }

    
    .nav-scrollable {
        background-color: #5e2b2b; 
        padding-top: 1rem;
        border-right: 3px solid #b33939;
        min-height: 100vh;
    }

    
    .nav-item {
        margin-bottom: 1rem;
    }

    
    .nav-link {
        color: #f07167;
        font-weight: 600;
        padding: 0.75rem 1rem;
        border-radius: 0.5rem;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .nav-link:hover,
        .nav-link.active {
            background-color: #b33939;
            color: #fff0f0;
            text-decoration: none;
        }

        
        .nav-link .bi {
            margin-right: 0.5rem;
            color: #f07167;
        }

</style>


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ShowTime</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="bands">
                <Blazorise.Icon Name="FontAwesomeIcons.Music" /> &nbsp; Artists
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="festivals">
                <Blazorise.Icon Name="FontAwesomeIcons.Globe" />&nbsp; Festivals
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="bookings" >
                <Blazorise.Icon Name="FontAwesomeIcons.Ticket" />&nbsp; Bookings
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                @* <div class="nav-item px-3"> *@
                @*     <NavLink class="nav-link" href="Account/Manage"> *@
                @*         <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name *@
                @*     </NavLink> *@
                @* </div> *@
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <Blazorise.Icon Name="FontAwesomeIcons.Remove" />&nbsp; Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <Blazorise.Icon Name="FontAwesomeIcons.User" />&nbsp; Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <Blazorise.Icon Name="FontAwesomeIcons.UserPlus" />&nbsp; Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>

        
    </nav>
</div>
@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
